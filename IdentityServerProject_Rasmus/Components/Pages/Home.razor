@page "/"
@using IdentityServerProject_Rasmus.Shared.DTOs
@using IdentityServerProject_Rasmus.Shared.Interfaces
@using IdentityServerProject_Rasmus.Components.Account
@using System.Net
@using IdentityServerProject_Rasmus.API.Services
@using Microsoft.AspNetCore.Authorization
@using Mono.TextTemplating
@rendermode InteractiveServer
@inject IService<ShopProductDto, Guid> ProductService
@inject IService<UserCartDto, string> UserCartService
@inject UserInfoService UserInfoService
@inject AuthenticationStateProvider AuthState
@attribute [Authorize]

<PageTitle>Hello</PageTitle>
<div class="justify-content-center align-content-center">
    <div>
        <button class="btn btn-outline-primary" @onclick="AddToCart">Add thing to cart</button>
    </div>
</div>

@code
{
    private string _loggedInUser;
    public string LoggedInUser
    {
        get => _loggedInUser;
        set
        {
            _loggedInUser = value;
            StateHasChanged();
        }
    }

    public List<ShopProductDto> ShopProducts { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var allProducts = await ProductService.GetAllAsync();
        _loggedInUser = await UserInfoService.GetLoggedInUserEmail();

        if (allProducts.ToList().Count < 1)
        {
            var newProduct = new ShopProductDto
                {
                    Name = "The product",
                    Price = 42,
                    ImageUrl = "https://www.ikea.com/se/en/images/products/vattentrag-box-with-lid__1176294_pe895907_s5.jpg?f=m"
                };

            await ProductService.CreateAsync(newProduct);

        }

        allProducts = await ProductService.GetAllAsync();

        ShopProducts.AddRange(allProducts);
    }



    private async Task AddToCart()
    {
        var loggedInUserCart = await UserCartService.GetByIdAsync(_loggedInUser);

        if (loggedInUserCart == null)
        {
            loggedInUserCart = new UserCartDto
                {
                    UserEmail = _loggedInUser,
                    ShopProducts = new List<ShopProductDto>()
                };

            await UserCartService.CreateAsync(loggedInUserCart);
        }

        loggedInUserCart.ShopProducts.Add(ShopProducts.First());

        await UserCartService.UpdateAsync(loggedInUserCart);
    }
}

